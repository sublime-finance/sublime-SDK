/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { MockCEther } from '../MockCEther';

export class MockCEther__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockCEther> {
    return super.deploy(overrides || {}) as Promise<MockCEther>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockCEther {
    return super.attach(address) as MockCEther;
  }
  connect(signer: Signer): MockCEther__factory {
    return super.connect(signer) as MockCEther__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockCEther {
    return new Contract(address, _abi, signerOrProvider) as MockCEther;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOfUnderlying',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exchangeRateCurrent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCash',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'redeemTokens',
        type: 'uint256',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604080518082018252600681526521a2ba3432b960d11b6020808301918252835180850190945260048452630c68aa8960e31b90840152815191929161005991600391610092565b50805161006d906004906020840190610092565b50506005805460ff1916601217905550670de0b6b3a764000060065542600755610133565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826100c8576000855561010e565b82601f106100e157805160ff191683800117855561010e565b8280016001018555821561010e579182015b8281111561010e5782518255916020019190600101906100f3565b5061011a92915061011e565b5090565b5b8082111561011a576000815560010161011f565b610f0780620001436000396000f3fe6080604052600436106100f35760003560e01c80633b1d21a21161008a578063a9059cbb11610059578063a9059cbb14610370578063bd6d894d146103a9578063db006a75146103be578063dd62ed3e146103e8576100f3565b80633b1d21a2146102da57806370a08231146102ef57806395d89b4114610322578063a457c2d714610337576100f3565b806323b872dd116100c657806323b872dd14610200578063313ce56714610243578063395093511461026e5780633af9e669146102a7576100f3565b806306fdde03146100f8578063095ea7b3146101825780631249c58b146101cf57806318160ddd146101d9575b600080fd5b34801561010457600080fd5b5061010d610423565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018e57600080fd5b506101bb600480360360408110156101a557600080fd5b506001600160a01b0381351690602001356104b9565b604080519115158252519081900360200190f35b6101d76104d6565b005b3480156101e557600080fd5b506101ee610502565b60408051918252519081900360200190f35b34801561020c57600080fd5b506101bb6004803603606081101561022357600080fd5b506001600160a01b03813581169160208101359091169060400135610508565b34801561024f57600080fd5b5061025861058f565b6040805160ff9092168252519081900360200190f35b34801561027a57600080fd5b506101bb6004803603604081101561029157600080fd5b506001600160a01b038135169060200135610598565b3480156102b357600080fd5b506101ee600480360360208110156102ca57600080fd5b50356001600160a01b03166105e6565b3480156102e657600080fd5b506101ee610611565b3480156102fb57600080fd5b506101ee6004803603602081101561031257600080fd5b50356001600160a01b031661062d565b34801561032e57600080fd5b5061010d610648565b34801561034357600080fd5b506101bb6004803603604081101561035a57600080fd5b506001600160a01b0381351690602001356106a9565b34801561037c57600080fd5b506101bb6004803603604081101561039357600080fd5b506001600160a01b038135169060200135610711565b3480156103b557600080fd5b506101ee610725565b3480156103ca57600080fd5b506101ee600480360360208110156103e157600080fd5b5035610734565b3480156103f457600080fd5b506101ee6004803603604081101561040b57600080fd5b506001600160a01b0381358116916020013516610795565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b5050505050905090565b60006104cd6104c66107c0565b84846107c4565b50600192915050565b60006104e06108b0565b34670de0b6b3a764000002816104f257fe5b0490506104ff33826108ec565b50565b60025490565b60006105158484846109dc565b610585846105216107c0565b61058085604051806060016040528060288152602001610e1b602891396001600160a01b038a1660009081526001602052604081209061055f6107c0565b6001600160a01b031681526020810191909152604001600020549190610b37565b6107c4565b5060019392505050565b60055460ff1690565b60006104cd6105a56107c0565b8461058085600160006105b66107c0565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610bce565b6000670de0b6b3a76400006105f96108b0565b6106028461062d565b028161060a57fe5b0492915050565b6000606461061d610502565b605a028161062757fe5b04905090565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104af5780601f10610484576101008083540402835291602001916104af565b60006104cd6106b66107c0565b8461058085604051806060016040528060258152602001610ead60259139600160006106e06107c0565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b37565b60006104cd61071e6107c0565b84846109dc565b600061072f6108b0565b905090565b600080670de0b6b3a76400006107486108b0565b84028161075157fe5b04905061075e3384610c2f565b604051339082156108fc029083906000818181858888f1935050505015801561078b573d6000803e3d6000fd5b5060009392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166108095760405162461bcd60e51b8152600401808060200182810382526024815260200180610e896024913960400191505060405180910390fd5b6001600160a01b03821661084e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610dd36022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600080670de0b6b3a764000060075442036305f5e10002670de0b6b3a76400000160065402816108dc57fe5b0460068190554260075591505090565b6001600160a01b038216610947576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61095360008383610d2b565b6002546109609082610bce565b6002556001600160a01b0382166000908152602081905260409020546109869082610bce565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038316610a215760405162461bcd60e51b8152600401808060200182810382526025815260200180610e646025913960400191505060405180910390fd5b6001600160a01b038216610a665760405162461bcd60e51b8152600401808060200182810382526023815260200180610d8e6023913960400191505060405180910390fd5b610a71838383610d2b565b610aae81604051806060016040528060268152602001610df5602691396001600160a01b0386166000908152602081905260409020549190610b37565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610add9082610bce565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bc65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b8b578181015183820152602001610b73565b50505050905090810190601f168015610bb85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c28576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c745760405162461bcd60e51b8152600401808060200182810382526021815260200180610e436021913960400191505060405180910390fd5b610c8082600083610d2b565b610cbd81604051806060016040528060228152602001610db1602291396001600160a01b0385166000908152602081905260409020549190610b37565b6001600160a01b038316600090815260208190526040902055600254610ce39082610d30565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b600082821115610d87576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220ba74ff91d951d4c1f1841215551c9aca12f575cdb27608de16479da33aee960364736f6c63430007060033';
