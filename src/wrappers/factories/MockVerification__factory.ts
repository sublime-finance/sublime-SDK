/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { MockVerification } from '../MockVerification';

export class MockVerification__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockVerification> {
    return super.deploy(overrides || {}) as Promise<MockVerification>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockVerification {
    return super.attach(address) as MockVerification;
  }
  connect(signer: Signer): MockVerification__factory {
    return super.connect(signer) as MockVerification__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockVerification {
    return new Contract(address, _abi, signerOrProvider) as MockVerification;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_verifier',
        type: 'address',
      },
    ],
    name: 'addUser',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isUser',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_verifier',
        type: 'address',
      },
    ],
    name: 'removeUser',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061019a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302d43dc81461004657806322928d6b146100885780638ca3b448146100b8575b600080fd5b6100746004803603604081101561005c57600080fd5b506001600160a01b03813581169160200135166100e6565b604080519115158252519081900360200190f35b6100b66004803603604081101561009e57600080fd5b506001600160a01b0381358116916020013516610103565b005b6100b6600480360360408110156100ce57600080fd5b506001600160a01b0381358116916020013516610132565b600060208181529281526040808220909352908152205460ff1681565b6001600160a01b039182166000908152602081815260408083209390941682529190915220805460ff19169055565b6001600160a01b039182166000908152602081815260408083209390941682529190915220805460ff1916600117905556fea26469706673582212205c2c9c6eeb866b85e084f9918163e7f37b46a18f605b78458519062088acc5b464736f6c63430007060033';
