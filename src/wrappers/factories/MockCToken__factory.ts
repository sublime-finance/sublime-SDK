/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { MockCToken } from '../MockCToken';

export class MockCToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_underlying: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockCToken> {
    return super.deploy(_underlying, overrides || {}) as Promise<MockCToken>;
  }
  getDeployTransaction(_underlying: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(_underlying, overrides || {});
  }
  attach(address: string): MockCToken {
    return super.attach(address) as MockCToken;
  }
  connect(signer: Signer): MockCToken__factory {
    return super.connect(signer) as MockCToken__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockCToken {
    return new Contract(address, _abi, signerOrProvider) as MockCToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_underlying',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOfUnderlying',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'comptroller',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exchangeRateCurrent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCash',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'mintAmount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'redeemTokens',
        type: 'uint256',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlying',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200123e3803806200123e833981810160405260208110156200003757600080fd5b5051604080518082018252600681526521aa37b5b2b760d11b60208281019182528351808501909452600284526110d560f21b9084015281519192916200008191600391620000e1565b50805162000097906004906020840190620000e1565b5050600580546001600160a01b0390931661010002610100600160a81b031960ff19909416601217939093169290921790915550670de0b6b3a7640000600655426007556200018d565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000119576000855562000164565b82601f106200013457805160ff191683800117855562000164565b8280016001018555821562000164579182015b828111156200016457825182559160200191906001019062000147565b506200017292915062000176565b5090565b5b8082111562000172576000815560010162000177565b6110a1806200019d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636f307dc3116100a2578063a457c2d711610071578063a457c2d714610317578063a9059cbb14610343578063bd6d894d1461036f578063db006a7514610377578063dd62ed3e1461039457610116565b80636f307dc3146102c457806370a08231146102cc57806395d89b41146102f2578063a0712d68146102fa57610116565b8063313ce567116100e9578063313ce5671461022857806339509351146102465780633af9e669146102725780633b1d21a2146102985780635fe3b567146102a057610116565b806306fdde031461011b578063095ea7b31461019857806318160ddd146101d857806323b872dd146101f2575b600080fd5b6101236103c2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b038135169060200135610458565b604080519115158252519081900360200190f35b6101e0610475565b60408051918252519081900360200190f35b6101c46004803603606081101561020857600080fd5b506001600160a01b0381358116916020810135909116906040013561047b565b610230610502565b6040805160ff9092168252519081900360200190f35b6101c46004803603604081101561025c57600080fd5b506001600160a01b03813516906020013561050b565b6101e06004803603602081101561028857600080fd5b50356001600160a01b0316610559565b6101e0610584565b6102a86105a0565b604080516001600160a01b039092168252519081900360200190f35b6102a86105a5565b6101e0600480360360208110156102e257600080fd5b50356001600160a01b03166105b9565b6101236105d4565b6101e06004803603602081101561031057600080fd5b5035610635565b6101c46004803603604081101561032d57600080fd5b506001600160a01b0381351690602001356106f5565b6101c46004803603604081101561035957600080fd5b506001600160a01b03813516906020013561075d565b6101e0610771565b6101e06004803603602081101561038d57600080fd5b5035610780565b6101e0600480360360408110156103aa57600080fd5b506001600160a01b038135811691602001351661092f565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046c61046561095a565b848461095e565b50600192915050565b60025490565b6000610488848484610a4a565b6104f88461049461095a565b6104f385604051806060016040528060288152602001610fb5602891396001600160a01b038a166000908152600160205260408120906104d261095a565b6001600160a01b031681526020810191909152604001600020549190610ba5565b61095e565b5060019392505050565b60055460ff1690565b600061046c61051861095a565b846104f3856001600061052961095a565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c3c565b6000670de0b6b3a764000061056c610c9d565b610575846105b9565b028161057d57fe5b0492915050565b60006064610590610475565b605a028161059a57fe5b04905090565b600090565b60055461010090046001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b600080610640610c9d565b83670de0b6b3a7640000028161065257fe5b600554604080516323b872dd60e01b815233600482015230602482015260448101889052905193909204935061010090046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b1580156106b557600080fd5b505af11580156106c9573d6000803e3d6000fd5b505050506040513d60208110156106df57600080fd5b506106ec90503382610cd9565b50600092915050565b600061046c61070261095a565b846104f385604051806060016040528060258152602001611047602591396001600061072c61095a565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610ba5565b600061046c61076a61095a565b8484610a4a565b600061077b610c9d565b905090565b600080670de0b6b3a7640000610794610c9d565b84028161079d57fe5b0490506107aa3384610dc9565b600554604080516370a0823160e01b8152336004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d602081101561082457600080fd5b50519050808211156108a157600554604080516340c10f1960e01b8152306004820152838503602482015290516101009092046001600160a01b0316916340c10f199160448082019260009290919082900301818387803b15801561088857600080fd5b505af115801561089c573d6000803e3d6000fd5b505050505b6005546040805163a9059cbb60e01b81523360048201526024810185905290516101009092046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b1580156108f957600080fd5b505af115801561090d573d6000803e3d6000fd5b505050506040513d602081101561092357600080fd5b50600095945050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166109a35760405162461bcd60e51b81526004018080602001828103825260248152602001806110236024913960400191505060405180910390fd5b6001600160a01b0382166109e85760405162461bcd60e51b8152600401808060200182810382526022815260200180610f6d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a8f5760405162461bcd60e51b8152600401808060200182810382526025815260200180610ffe6025913960400191505060405180910390fd5b6001600160a01b038216610ad45760405162461bcd60e51b8152600401808060200182810382526023815260200180610f286023913960400191505060405180910390fd5b610adf838383610ec5565b610b1c81604051806060016040528060268152602001610f8f602691396001600160a01b0386166000908152602081905260409020549190610ba5565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b4b9082610c3c565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c345760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bf9578181015183820152602001610be1565b50505050905090810190601f168015610c265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c96576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600080670de0b6b3a764000060075442036305f5e10002670de0b6b3a7640000016006540281610cc957fe5b0460068190554260075591505090565b6001600160a01b038216610d34576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d4060008383610ec5565b600254610d4d9082610c3c565b6002556001600160a01b038216600090815260208190526040902054610d739082610c3c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610e0e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610fdd6021913960400191505060405180910390fd5b610e1a82600083610ec5565b610e5781604051806060016040528060228152602001610f4b602291396001600160a01b0385166000908152602081905260409020549190610ba5565b6001600160a01b038316600090815260208190526040902055600254610e7d9082610eca565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b600082821115610f21576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a846c3bb6046052662d86c17ea7b6c0953b99248108ff6fcb267a2b943918c1864736f6c63430007060033';
