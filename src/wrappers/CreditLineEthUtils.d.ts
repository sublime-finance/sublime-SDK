/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  PayableOverrides,
  CallOverrides,
} from 'ethers';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';
import { TypedEventFilter, TypedEvent, TypedListener } from './commons';

interface CreditLineEthUtilsInterface extends ethers.utils.Interface {
  functions: {
    'creditlines()': FunctionFragment;
    'depositEthAsCollateralToCreditLine(uint256)': FunctionFragment;
    'repayEthToCreditLines(uint256)': FunctionFragment;
    'weth()': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'creditlines', values?: undefined): string;
  encodeFunctionData(functionFragment: 'depositEthAsCollateralToCreditLine', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'repayEthToCreditLines', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'weth', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'creditlines', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'depositEthAsCollateralToCreditLine', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'repayEthToCreditLines', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'weth', data: BytesLike): Result;

  events: {};
}

export class CreditLineEthUtils extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: CreditLineEthUtilsInterface;

  functions: {
    creditlines(overrides?: CallOverrides): Promise<[string]>;

    'creditlines()'(overrides?: CallOverrides): Promise<[string]>;

    depositEthAsCollateralToCreditLine(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'depositEthAsCollateralToCreditLine(uint256)'(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    repayEthToCreditLines(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'repayEthToCreditLines(uint256)'(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    weth(overrides?: CallOverrides): Promise<[string]>;

    'weth()'(overrides?: CallOverrides): Promise<[string]>;
  };

  creditlines(overrides?: CallOverrides): Promise<string>;

  'creditlines()'(overrides?: CallOverrides): Promise<string>;

  depositEthAsCollateralToCreditLine(
    _id: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'depositEthAsCollateralToCreditLine(uint256)'(
    _id: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  repayEthToCreditLines(
    _id: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'repayEthToCreditLines(uint256)'(
    _id: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  weth(overrides?: CallOverrides): Promise<string>;

  'weth()'(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    creditlines(overrides?: CallOverrides): Promise<string>;

    'creditlines()'(overrides?: CallOverrides): Promise<string>;

    depositEthAsCollateralToCreditLine(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'depositEthAsCollateralToCreditLine(uint256)'(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    repayEthToCreditLines(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'repayEthToCreditLines(uint256)'(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    weth(overrides?: CallOverrides): Promise<string>;

    'weth()'(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    creditlines(overrides?: CallOverrides): Promise<BigNumber>;

    'creditlines()'(overrides?: CallOverrides): Promise<BigNumber>;

    depositEthAsCollateralToCreditLine(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'depositEthAsCollateralToCreditLine(uint256)'(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    repayEthToCreditLines(_id: BigNumberish, overrides?: PayableOverrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'repayEthToCreditLines(uint256)'(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    weth(overrides?: CallOverrides): Promise<BigNumber>;

    'weth()'(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    creditlines(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'creditlines()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    depositEthAsCollateralToCreditLine(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'depositEthAsCollateralToCreditLine(uint256)'(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    repayEthToCreditLines(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'repayEthToCreditLines(uint256)'(
      _id: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    weth(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'weth()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
