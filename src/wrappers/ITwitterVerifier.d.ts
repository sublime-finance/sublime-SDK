/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from 'ethers';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';
import { TypedEventFilter, TypedEvent, TypedListener } from './commons';

interface ITwitterVerifierInterface extends ethers.utils.Interface {
  functions: {
    'registerSelf(bool,uint8,bytes32,bytes32,string,uint256)': FunctionFragment;
    'unregisterSelf()': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'registerSelf', values: [boolean, BigNumberish, BytesLike, BytesLike, string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'unregisterSelf', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'registerSelf', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'unregisterSelf', data: BytesLike): Result;

  events: {};
}

export class ITwitterVerifier extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ITwitterVerifierInterface;

  functions: {
    registerSelf(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'registerSelf(bool,uint8,bytes32,bytes32,string,uint256)'(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unregisterSelf(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'unregisterSelf()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;
  };

  registerSelf(
    _isMasterLinked: boolean,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    _twitterId: string,
    _deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'registerSelf(bool,uint8,bytes32,bytes32,string,uint256)'(
    _isMasterLinked: boolean,
    _v: BigNumberish,
    _r: BytesLike,
    _s: BytesLike,
    _twitterId: string,
    _deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unregisterSelf(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'unregisterSelf()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  callStatic: {
    registerSelf(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    'registerSelf(bool,uint8,bytes32,bytes32,string,uint256)'(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unregisterSelf(overrides?: CallOverrides): Promise<void>;

    'unregisterSelf()'(overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    registerSelf(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'registerSelf(bool,uint8,bytes32,bytes32,string,uint256)'(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unregisterSelf(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'unregisterSelf()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;
  };

  populateTransaction: {
    registerSelf(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'registerSelf(bool,uint8,bytes32,bytes32,string,uint256)'(
      _isMasterLinked: boolean,
      _v: BigNumberish,
      _r: BytesLike,
      _s: BytesLike,
      _twitterId: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unregisterSelf(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'unregisterSelf()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;
  };
}
