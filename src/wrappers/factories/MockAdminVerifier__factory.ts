/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { MockAdminVerifier } from '../MockAdminVerifier';

export class MockAdminVerifier__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockAdminVerifier> {
    return super.deploy(overrides || {}) as Promise<MockAdminVerifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockAdminVerifier {
    return super.attach(address) as MockAdminVerifier;
  }
  connect(signer: Signer): MockAdminVerifier__factory {
    return super.connect(signer) as MockAdminVerifier__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockAdminVerifier {
    return new Contract(address, _abi, signerOrProvider) as MockAdminVerifier;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'signerAddress',
        type: 'address',
      },
    ],
    name: 'SignerUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'isMasterLinked',
        type: 'bool',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'metadata',
        type: 'string',
      },
    ],
    name: 'UserRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'UserUnregistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'verification',
        type: 'address',
      },
    ],
    name: 'VerificationUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_admin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_verification',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_version',
        type: 'string',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'registerSelf',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'registerUserViaOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unregisterSelf',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'unregisterUser',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_verification',
        type: 'address',
      },
    ],
    name: 'updateVerification',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'verification',
    outputs: [
      {
        internalType: 'contract IVerification',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611125806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461026357806385ebbc6c1461026b5780638da5cb5b14610291578063cbc0415d14610299578063f2fde38b146102a15761009e565b80632016a0d2146100a357806321f2ca3b146101eb5780634714a411146102115780634ffe2a8b146102375780636bafaa591461025b575b600080fd5b6101e9600480360360808110156100b957600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156100ed57600080fd5b8201836020820111156100ff57600080fd5b8035906020019184600183028401116401000000008311171561012157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460018302840111640100000000831117156101a857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102c7945050505050565b005b6101e96004803603602081101561020157600080fd5b50356001600160a01b0316610391565b6101e96004803603602081101561022757600080fd5b50356001600160a01b031661055b565b61023f6105c9565b604080516001600160a01b039092168252519081900360200190f35b6101e96105d8565b6101e9610732565b6101e96004803603602081101561028157600080fd5b50356001600160a01b03166107de565b61023f6109cd565b6101e96109dc565b6101e9600480360360208110156102b757600080fd5b50356001600160a01b0316610b5b565b600054610100900460ff16806102e057506102e0610c5e565b806102ee575060005460ff16155b6103295760405162461bcd60e51b815260040180806020018281038252602e8152602001806110a2602e913960400191505060405180910390fd5b600054610100900460ff16158015610354576000805460ff1961ff0019909116610100171660011790555b61035c610c6f565b61036585610b5b565b61036e84610d20565b6103788383610d6a565b801561038a576000805461ff00191690555b5050505050565b610399610e18565b6001600160a01b03166103aa6109cd565b6001600160a01b0316146103f3576040805162461bcd60e51b815260206004820181905260248201526000805160206110d0833981519152604482015290519081900360640190fd5b60995460408051625a87b960e31b81526001600160a01b038481166004830152306024830152915191909216916302d43dc8916044808301926020929190829003018186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b50516104b8576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b604482015290519081900360640190fd5b60995460408051635a6ace8760e11b81526001600160a01b0384811660048301523060248301529151919092169163b4d59d0e91604480830192600092919082900301818387803b15801561050c57600080fd5b505af1158015610520573d6000803e3d6000fd5b50506040516001600160a01b03841692507f69c4cef1aa574ae7852ac8b784ab60926951c604b70049150e4091759ea980769150600090a250565b610563610e18565b6001600160a01b03166105746109cd565b6001600160a01b0316146105bd576040805162461bcd60e51b815260206004820181905260248201526000805160206110d0833981519152604482015290519081900360640190fd5b6105c681610d20565b50565b6099546001600160a01b031681565b60995460408051625a87b960e31b815233600482015230602482015290516001600160a01b03909216916302d43dc891604480820192602092909190829003018186803b15801561062857600080fd5b505afa15801561063c573d6000803e3d6000fd5b505050506040513d602081101561065257600080fd5b505161069b576040805162461bcd60e51b8152602060048201526013602482015272155cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b604482015290519081900360640190fd5b60995460408051635a6ace8760e11b815233600482015230602482015290516001600160a01b039092169163b4d59d0e9160448082019260009290919082900301818387803b1580156106ed57600080fd5b505af1158015610701573d6000803e3d6000fd5b50506040513392507f69c4cef1aa574ae7852ac8b784ab60926951c604b70049150e4091759ea980769150600090a2565b61073a610e18565b6001600160a01b031661074b6109cd565b6001600160a01b031614610794576040805162461bcd60e51b815260206004820181905260248201526000805160206110d0833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6107e6610e18565b6001600160a01b03166107f76109cd565b6001600160a01b031614610840576040805162461bcd60e51b815260206004820181905260248201526000805160206110d0833981519152604482015290519081900360640190fd5b60995460408051625a87b960e31b81526001600160a01b038481166004830152306024830152915191909216916302d43dc8916044808301926020929190829003018186803b15801561089257600080fd5b505afa1580156108a6573d6000803e3d6000fd5b505050506040513d60208110156108bc57600080fd5b505115610906576040805162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015290519081900360640190fd5b6099546040805163a94413a160e01b81526001600160a01b038481166004830152600160248301529151919092169163a94413a191604480830192600092919082900301818387803b15801561095b57600080fd5b505af115801561096f573d6000803e3d6000fd5b505060408051636e6f6e6560e01b815281519081900360040181206001825291519193506001600160a01b03851692507fd0cc6197d4f74413f62e2cef7b4b43536e1965d8f11dcbf4c376ec1e85d2b22e919081900360200190a350565b6033546001600160a01b031690565b60995460408051625a87b960e31b815233600482015230602482015290516001600160a01b03909216916302d43dc891604480820192602092909190829003018186803b158015610a2c57600080fd5b505afa158015610a40573d6000803e3d6000fd5b505050506040513d6020811015610a5657600080fd5b505115610aa0576040805162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015290519081900360640190fd5b6099546040805163a94413a160e01b81523360048201526001602482015290516001600160a01b039092169163a94413a19160448082019260009290919082900301818387803b158015610af357600080fd5b505af1158015610b07573d6000803e3d6000fd5b505060408051636e6f6e6560e01b815281519081900360040181206001825291519193503392507fd0cc6197d4f74413f62e2cef7b4b43536e1965d8f11dcbf4c376ec1e85d2b22e919081900360200190a3565b610b63610e18565b6001600160a01b0316610b746109cd565b6001600160a01b031614610bbd576040805162461bcd60e51b815260206004820181905260248201526000805160206110d0833981519152604482015290519081900360640190fd5b6001600160a01b038116610c025760405162461bcd60e51b815260040180806020018281038252602681526020018061107c6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c6930610e1c565b15905090565b600054610100900460ff1680610c885750610c88610c5e565b80610c96575060005460ff16155b610cd15760405162461bcd60e51b815260040180806020018281038252602e8152602001806110a2602e913960400191505060405180910390fd5b600054610100900460ff16158015610cfc576000805460ff1961ff0019909116610100171660011790555b610d04610e22565b610d0c610ec2565b80156105c6576000805461ff001916905550565b609980546001600160a01b0319166001600160a01b0383169081179091556040517f338023d1a77245a8822dee6b9aa4282f63ead21a60f318249be250004ed8b93b90600090a250565b600054610100900460ff1680610d835750610d83610c5e565b80610d91575060005460ff16155b610dcc5760405162461bcd60e51b815260040180806020018281038252602e8152602001806110a2602e913960400191505060405180910390fd5b600054610100900460ff16158015610df7576000805460ff1961ff0019909116610100171660011790555b610e018383610fbb565b8015610e13576000805461ff00191690555b505050565b3390565b3b151590565b600054610100900460ff1680610e3b5750610e3b610c5e565b80610e49575060005460ff16155b610e845760405162461bcd60e51b815260040180806020018281038252602e8152602001806110a2602e913960400191505060405180910390fd5b600054610100900460ff16158015610d0c576000805460ff1961ff00199091166101001716600117905580156105c6576000805461ff001916905550565b600054610100900460ff1680610edb5750610edb610c5e565b80610ee9575060005460ff16155b610f245760405162461bcd60e51b815260040180806020018281038252602e8152602001806110a2602e913960400191505060405180910390fd5b600054610100900460ff16158015610f4f576000805460ff1961ff0019909116610100171660011790555b6000610f59610e18565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156105c6576000805461ff001916905550565b600054610100900460ff1680610fd45750610fd4610c5e565b80610fe2575060005460ff16155b61101d5760405162461bcd60e51b815260040180806020018281038252602e8152602001806110a2602e913960400191505060405180910390fd5b600054610100900460ff16158015611048576000805460ff1961ff0019909116610100171660011790555b82516020808501919091208351918401919091206065919091556066558015610e13576000805461ff001916905550505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122056eb66fbde3b6ec8765c275cde09cacfd2b8e12f5ce0ba666ee79909982ac85e64736f6c63430007060033';
