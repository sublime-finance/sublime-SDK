/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { StrategyRegistry } from '../StrategyRegistry';

export class StrategyRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<StrategyRegistry> {
    return super.deploy(overrides || {}) as Promise<StrategyRegistry>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StrategyRegistry {
    return super.attach(address) as StrategyRegistry;
  }
  connect(signer: Signer): StrategyRegistry__factory {
    return super.connect(signer) as StrategyRegistry__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StrategyRegistry {
    return new Contract(address, _abi, signerOrProvider) as StrategyRegistry;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxStrategies',
        type: 'uint256',
      },
    ],
    name: 'MaxStrategiesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
    ],
    name: 'StrategyAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
    ],
    name: 'StrategyRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'addStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_maxStrategies',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'isValidStrategy',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxStrategies',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'registry',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_strategyIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_strategyAddress',
        type: 'address',
      },
    ],
    name: 'removeStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'retiredRegistry',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'strategies',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxStrategies',
        type: 'uint256',
      },
    ],
    name: 'updateMaxStrategies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_strategyIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_oldStrategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newStrategy',
        type: 'address',
      },
    ],
    name: 'updateStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506110c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b49a60bb1161008c578063cd6dc68711610066578063cd6dc6871461029b578063d574ea3d146102c7578063f2fde38b146102e4578063f50d49841461030a576100ea565b8063b49a60bb14610201578063c02d172714610259578063c79c21b714610293576100ea565b80636d1cdb9d116100c85780636d1cdb9d14610175578063715018a6146101a157806376ba717b146101a95780638da5cb5b146101dd576100ea565b8063038defd7146100ef578063223e54791461012757806369a8405b1461014f575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b0316610327565b60408051918252519081900360200190f35b61014d6004803603602081101561013d57600080fd5b50356001600160a01b0316610339565b005b6101156004803603602081101561016557600080fd5b50356001600160a01b03166104fc565b61014d6004803603604081101561018b57600080fd5b50803590602001356001600160a01b031661050e565b61014d61071e565b61014d600480360360608110156101bf57600080fd5b508035906001600160a01b03602082013581169160400135166107ca565b6101e5610a2b565b604080516001600160a01b039092168252519081900360200190f35b610209610a3a565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561024557818101518382015260200161022d565b505050509050019250505060405180910390f35b61027f6004803603602081101561026f57600080fd5b50356001600160a01b0316610a9c565b604080519115158252519081900360200190f35b610115610adf565b61014d600480360360408110156102b157600080fd5b506001600160a01b038135169060200135610ae5565b6101e5600480360360208110156102dd57600080fd5b5035610ba3565b61014d600480360360208110156102fa57600080fd5b50356001600160a01b0316610bcd565b61014d6004803603602081101561032057600080fd5b5035610cd0565b60676020526000908152604090205481565b610341610d3e565b6001600160a01b0316610352610a2b565b6001600160a01b03161461039b576040805162461bcd60e51b81526020600482018190526024820152600080516020611070833981519152604482015290519081900360640190fd5b60655460665460010111156103e0576040805162461bcd60e51b815260206004820152600660248201526553523a41533160d01b604482015290519081900360640190fd5b6001600160a01b03811660009081526067602052604090205415610434576040805162461bcd60e51b815260206004820152600660248201526529a91d20a99960d11b604482015290519081900360640190fd5b6001600160a01b038116610478576040805162461bcd60e51b815260206004820152600660248201526553523a41533360d01b604482015290519081900360640190fd5b6001600160a01b03811660008181526067602052604080822060019081905560668054918201815583527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b03191684179055517f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19190a250565b60686020526000908152604090205481565b610516610d3e565b6001600160a01b0316610527610a2b565b6001600160a01b031614610570576040805162461bcd60e51b81526020600482018190526024820152600080516020611070833981519152604482015290519081900360640190fd5b60006066838154811061057f57fe5b6000918252602090912001546001600160a01b039081169150821681146105d6576040805162461bcd60e51b815260206004820152600660248201526553523a52533160d01b604482015290519081900360640190fd5b6000606680548060200260200160405190810160405280929190818152602001828054801561062e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610610575b509394508793505050505b600182510381101561069a5781816001018151811061065457fe5b60200260200101516066828154811061066957fe5b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055600101610639565b5060668054806106a657fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038416808352606782526040808420849055606890925281832060019055905190917f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea491a250505050565b610726610d3e565b6001600160a01b0316610737610a2b565b6001600160a01b031614610780576040805162461bcd60e51b81526020600482018190526024820152600080516020611070833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6107d2610d3e565b6001600160a01b03166107e3610a2b565b6001600160a01b03161461082c576040805162461bcd60e51b81526020600482018190526024820152600080516020611070833981519152604482015290519081900360640190fd5b606654831061086b576040805162461bcd60e51b815260206004820152600660248201526553523a55533160d01b604482015290519081900360640190fd5b816001600160a01b03166066848154811061088257fe5b6000918252602090912001546001600160a01b0316146108d2576040805162461bcd60e51b815260206004820152600660248201526529a91d2aa99960d11b604482015290519081900360640190fd5b6001600160a01b038116610916576040805162461bcd60e51b815260206004820152600660248201526553523a55533360d01b604482015290519081900360640190fd5b6001600160a01b0381166000908152606760205260409020541561096a576040805162461bcd60e51b815260206004820152600660248201526514d48e9554cd60d21b604482015290519081900360640190fd5b806066848154811061097857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905591841680825260678352604080832083905560689093528282206001905591517f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea49190a26001600160a01b03811660008181526067602052604080822060019055517f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19190a2505050565b6033546001600160a01b031690565b60606066805480602002602001604051908101604052809291908181526020018280548015610a9257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a74575b5050505050905090565b6001600160a01b038116600090815260676020526040812054151580610ad957506001600160a01b03821660009081526068602052604090205415155b92915050565b60655481565b600054610100900460ff1680610afe5750610afe610d42565b80610b0c575060005460ff16155b610b475760405162461bcd60e51b815260040180806020018281038252602e815260200180611042602e913960400191505060405180910390fd5b600054610100900460ff16158015610b72576000805460ff1961ff0019909116610100171660011790555b610b7a610d53565b610b8383610bcd565b610b8c82610e04565b8015610b9e576000805461ff00191690555b505050565b60668181548110610bb357600080fd5b6000918252602090912001546001600160a01b0316905081565b610bd5610d3e565b6001600160a01b0316610be6610a2b565b6001600160a01b031614610c2f576040805162461bcd60e51b81526020600482018190526024820152600080516020611070833981519152604482015290519081900360640190fd5b6001600160a01b038116610c745760405162461bcd60e51b815260040180806020018281038252602681526020018061101c6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b610cd8610d3e565b6001600160a01b0316610ce9610a2b565b6001600160a01b031614610d32576040805162461bcd60e51b81526020600482018190526024820152600080516020611070833981519152604482015290519081900360640190fd5b610d3b81610e04565b50565b3390565b6000610d4d30610e7c565b15905090565b600054610100900460ff1680610d6c5750610d6c610d42565b80610d7a575060005460ff16155b610db55760405162461bcd60e51b815260040180806020018281038252602e815260200180611042602e913960400191505060405180910390fd5b600054610100900460ff16158015610de0576000805460ff1961ff0019909116610100171660011790555b610de8610e82565b610df0610f22565b8015610d3b576000805461ff001916905550565b80610e41576040805162461bcd60e51b815260206004820152600860248201526753523a49554d533160c01b604482015290519081900360640190fd5b60658190556040805182815290517fd59e44bf8aa1c1d7491eb52429bbdce9f1fe3bbb314b1786e509c58bf76365b79181900360200190a150565b3b151590565b600054610100900460ff1680610e9b5750610e9b610d42565b80610ea9575060005460ff16155b610ee45760405162461bcd60e51b815260040180806020018281038252602e815260200180611042602e913960400191505060405180910390fd5b600054610100900460ff16158015610df0576000805460ff1961ff0019909116610100171660011790558015610d3b576000805461ff001916905550565b600054610100900460ff1680610f3b5750610f3b610d42565b80610f49575060005460ff16155b610f845760405162461bcd60e51b815260040180806020018281038252602e815260200180611042602e913960400191505060405180910390fd5b600054610100900460ff16158015610faf576000805460ff1961ff0019909116610100171660011790555b6000610fb9610d3e565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610d3b576000805461ff00191690555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220e613d17660ba06294314e237181765296058765285180aa5e8a640b1134da23064736f6c63430007060033';
